% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid_lasso_logistic.R
\name{grid_lasso_logistic}
\alias{grid_lasso_logistic}
\title{Computed solution paths for binary response model}
\usage{
grid_lasso_logistic(
  x = NULL,
  y,
  var_order = NULL,
  lambda = NULL,
  nlambda = 100L,
  grid.size = p,
  grid.size.truncate = grid.size,
  lambda.min.ratio = ifelse(n < p, 0.01, 1e-04),
  thresh = 1e-10,
  maxit = 1e+05
)
}
\arguments{
\item{x}{Design matrix, n x p}

\item{y}{Vector of responses, length n}

\item{var_order}{For user-specified ordering of variables. Indices start at 0, start with least important variable and end with most. By default order will be induced from scaling of columns in design matrix}

\item{lambda}{For user-specified sequence of tuning parameter lambda}

\item{nlambda}{Length of automatically generated sequence of tuning parameters lambda}

\item{grid.size}{Number of subsets of variables for which a solution path will be computed for}

\item{grid.size.truncate}{Not for user modification and is only altered when called from cv_grid_lasso}

\item{lambda.min.ratio}{Ratio of max/min lambda for automatically generated sequence of tuning parameters lambda}

\item{thresh}{Convergence threshold for coordinate descent for difference in objective values between successive iterations}

\item{maxit}{Maximum number of iterations for coordinate descent routine}
}
\value{
A list of glmnet model objects
}
\description{
Computes solutions for grid lasso-penalised logistic regression (wrapper for glmnet)
}
\examples{
set.seed(1)
X = matrix(0, 50, 500)
betavec = c(rep(1,5),rep(0,495))
X[ , 1:5 ] = matrix(rnorm(250), 50, 5)
Y = as.vector(X \%*\% betavec)
Y = Y + rnorm(50)
Y = as.numeric(Y >= mean(Y))
X = X + matrix(rnorm(50*500), 50, 500)
mod1 = grid_lasso_logistic(X, Y, grid.size = 25)

}
